{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","App.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","helpers/constants.ts","components/PersonLink/PersonLink.tsx","helpers/helperFunctions.tsx","components/PersonList/PersonList.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","App","role","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","slug","sex","findPerson","personName","personsArray","foundPerson","find","pers","name","PersonList","persons","useParams","length","map","header","person","born","died","motherName","fatherName","PeoplePage","useState","setPersons","isLoading","setIsLoading","hasError","setHasError","useEffect","catch","error","console","message","finally","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.4dd740af.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {title}\n  </NavLink>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { PageNavLink } from './components/PageNavLink/PageNavLink';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n\n          <PageNavLink to=\"people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NO_VALUE = '-';\nexport const FEMALE_VALUE = 'f';\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FEMALE_VALUE } from '../../helpers/constants';\n\ntype Props = {\n  slug: string,\n  sex: string,\n  title: string,\n};\n\nexport const PersonLink: FC<Props> = ({ slug, sex, title }) => (\n  <Link\n    className={classNames({\n      'has-text-danger': sex === FEMALE_VALUE,\n    })}\n    to={`/people/${slug}`}\n  >\n    {title}\n  </Link>\n);\n","import { PersonLink } from '../components/PersonLink/PersonLink';\nimport { Person } from '../types/Person';\n\nexport const findPerson = (personName: string, personsArray: Person[]) => {\n  const foundPerson = personsArray.find(pers => pers.name === personName);\n\n  if (foundPerson) {\n    return (\n      <PersonLink\n        slug={foundPerson.slug}\n        sex={foundPerson.sex}\n        title={foundPerson.name}\n      />\n    );\n  }\n\n  return personName;\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { NO_VALUE } from '../../helpers/constants';\nimport { findPerson } from '../../helpers/helperFunctions';\n\ntype Props = {\n  persons: null | Person[],\n};\n\nexport const PersonList: FC<Props> = ({ persons }) => {\n  const { slug } = useParams();\n\n  const tableHeaders = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  if (persons?.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeaders.map(header => (\n            <th>{header}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons?.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n          } = person;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  slug={person.slug}\n                  sex={sex}\n                  title={name}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{findPerson(motherName || NO_VALUE, persons)}</td>\n              <td>{findPerson(fatherName || NO_VALUE, persons)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonList } from '../../components/PersonList/PersonList';\n\nexport const PeoplePage = () => {\n  const [persons, setPersons] = useState<null | Person[]>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPersons)\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n        setHasError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError\n            ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )\n            : (persons && <PersonList persons={persons} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />} />\n          <Route path=\"people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}